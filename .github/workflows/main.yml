name: OctoBot-Binary-CI
on:
  schedule:
    - cron: '0 5 * * 1' # every monday at 5am
  push:

jobs:
  builds:
    name: ${{ matrix.os }} - ${{ matrix.arch }} - Python 3.10 - build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-13, windows-latest, ubuntu-22.04 ]
        arch: [ x64 ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.x'
        architecture: x64

    - name: Build OctoBot Binary on Linux
      if: matrix.os == 'ubuntu-22.04' && matrix.arch == 'x64'
      env:
        GH_REPO: Drakkar-Software/OctoBot-Tentacles
        OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
        OCTOBOT_DEFAULT_BRANCH: dev
        OCTOBOT_REPOSITORY_DIR: OctoBot
        NLTK_DATA: nltk_data
        BUILD_ARCH: ${{ matrix.arch }}
      run: bash ./build_scripts/unix.sh

    - name: Build OctoBot Binary on MacOS
      if: matrix.os == 'macos-13'
      env:
        GH_REPO: Drakkar-Software/OctoBot-Tentacles
        OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
        OCTOBOT_DEFAULT_BRANCH: dev
        OCTOBOT_REPOSITORY_DIR: OctoBot
        NLTK_DATA: nltk_data
        BUILD_ARCH: ${{ matrix.arch }}
      run: bash ./build_scripts/unix.sh

    - name: Build OctoBot Binary on Windows
      if: matrix.os == 'windows-latest'
      env:
        GH_REPO: Drakkar-Software/OctoBot-Tentacles
        OCTOBOT_GH_REPO: https://github.com/Drakkar-Software/OctoBot.git
        OCTOBOT_DEFAULT_BRANCH: dev
        OCTOBOT_REPOSITORY_DIR: OctoBot
        NLTK_DATA: nltk_data
      run: .\build_scripts\windows.ps1
      shell: powershell

    - name: Upload OctoBot Binary on MacOS
      uses: actions/upload-artifact@v4
      if: matrix.os == 'macos-13'
      with:
        name: OctoBot_macos_${{ matrix.arch }}
        path: OctoBot/OctoBot_${{ matrix.arch }}
        if-no-files-found: error

    - name: Upload OctoBot Binary on Linux
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-22.04'
      with:
        name: OctoBot_linux_${{ matrix.arch }}
        path: OctoBot/OctoBot_${{ matrix.arch }}
        if-no-files-found: error

    - name: Upload OctoBot Binary on Windows
      uses: actions/upload-artifact@v4
      if: matrix.os == 'windows-latest'
      with:
        name: OctoBot_windows_${{ matrix.arch }}.exe
        path: OctoBot/dist/OctoBot_windows.exe
        if-no-files-found: error


  notify:
    name: Notify
    runs-on: ubuntu-22.04
    needs:
      - builds
    if: ${{ failure() }}

    steps:
      - name: Notify discord
        uses: sarisia/actions-status-discord@v1
        with:
          status: Failure
          webhook: ${{ secrets.DISCORD_GITHUB_WEBHOOK }}
